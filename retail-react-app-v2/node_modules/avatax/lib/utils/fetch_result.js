"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FetchResult = void 0;
var json2typescript_1 = require("json2typescript");
var FetchResult = exports.FetchResult = /** @class */ (function () {
    function FetchResult() {
        /**
         * The number of rows returned by your query, prior to pagination.
         */
        this["@recordsetCount"] = 0;
        /**
         * The paginated and filtered list of records matching the parameters you supplied.
         */
        this.value = [];
        /**
         * The link to the next page of results
         */
        this.nextLink = '';
    }
    __decorate([
        (0, json2typescript_1.JsonProperty)("@recordsetCount", Number),
        __metadata("design:type", Number)
    ], FetchResult.prototype, "@recordsetCount", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("value", [Object]),
        __metadata("design:type", Array)
    ], FetchResult.prototype, "value", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("nextLink", String, true),
        __metadata("design:type", String)
    ], FetchResult.prototype, "nextLink", void 0);
    FetchResult = __decorate([
        (0, json2typescript_1.JsonObject)("FetchResult")
    ], FetchResult);
    return FetchResult;
}());
