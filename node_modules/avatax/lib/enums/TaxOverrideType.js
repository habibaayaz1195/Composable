"use strict";
/*
 * AvaTax Software Development Kit for JavaScript
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @copyright  2004-2018 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V2-JS-SDK
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaxOverrideTypeConverter = exports.TaxOverrideType = void 0;
var json2typescript_1 = require("json2typescript");
/**
* @export
* @enum {string}
*/
var TaxOverrideType;
(function (TaxOverrideType) {
    TaxOverrideType[TaxOverrideType["None"] = 0] = "None";
    TaxOverrideType[TaxOverrideType["TaxAmount"] = 1] = "TaxAmount";
    TaxOverrideType[TaxOverrideType["Exemption"] = 2] = "Exemption";
    TaxOverrideType[TaxOverrideType["TaxDate"] = 3] = "TaxDate";
    TaxOverrideType[TaxOverrideType["AccruedTaxAmount"] = 4] = "AccruedTaxAmount";
    TaxOverrideType[TaxOverrideType["DeriveTaxable"] = 5] = "DeriveTaxable";
    TaxOverrideType[TaxOverrideType["OutOfHarbor"] = 6] = "OutOfHarbor";
    TaxOverrideType[TaxOverrideType["TaxAmountByTaxType"] = 7] = "TaxAmountByTaxType";
    TaxOverrideType[TaxOverrideType["VendorChargedTax"] = 8] = "VendorChargedTax";
})(TaxOverrideType || (exports.TaxOverrideType = TaxOverrideType = {}));
var TaxOverrideTypeConverter = exports.TaxOverrideTypeConverter = /** @class */ (function () {
    function TaxOverrideTypeConverter() {
    }
    TaxOverrideTypeConverter.prototype.serialize = function (data) {
        return data;
    };
    TaxOverrideTypeConverter.prototype.deserialize = function (enumType) {
        return TaxOverrideType[enumType];
    };
    TaxOverrideTypeConverter = __decorate([
        json2typescript_1.JsonConverter
    ], TaxOverrideTypeConverter);
    return TaxOverrideTypeConverter;
}());
