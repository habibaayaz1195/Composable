"use strict";
/*
 * AvaTax Software Development Kit for JavaScript
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @copyright  2004-2018 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V2-JS-SDK
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VarianceRequestModel = void 0;
var VarianceLine_1 = require("./VarianceLine");
var VarianceUnit_1 = require("./VarianceUnit");
var VarianceDetail_1 = require("./VarianceDetail");
var json2typescript_1 = require("json2typescript");
/**
 * Request model used as input for Variance API.
 * @export
 * @class VarianceRequestModel
 */
var VarianceRequestModel = exports.VarianceRequestModel = /** @class */ (function () {
    function VarianceRequestModel() {
        /**
         * @type {number}
         * @memberof VarianceRequestModel
         */
        this.documentId = undefined;
        /**
         * @type {string}
         * @memberof VarianceRequestModel
         */
        this.documentCode = undefined;
        /**
         * @type {string}
         * @memberof VarianceRequestModel
         */
        this.purchaseOrderNo = undefined;
        /**
         * @type {string}
         * @memberof VarianceRequestModel
         */
        this.referenceNo = undefined;
        /**
         * @type {number}
         * @memberof VarianceRequestModel
         */
        this.exchangeRate = undefined;
        /**
         * @type {VarianceLine[]}
         * @memberof VarianceRequestModel
         */
        this.lines = undefined;
        /**
         * @type {VarianceUnit}
         * @memberof VarianceRequestModel
         */
        this.amount = undefined;
        /**
         * @type {VarianceUnit}
         * @memberof VarianceRequestModel
         */
        this.taxableAmount = undefined;
        /**
         * @type {VarianceUnit}
         * @memberof VarianceRequestModel
         */
        this.dutyPaid = undefined;
        /**
         * @type {VarianceUnit}
         * @memberof VarianceRequestModel
         */
        this.taxPaid = undefined;
        /**
         * @type {VarianceUnit}
         * @memberof VarianceRequestModel
         */
        this.totalTaxPaid = undefined;
        /**
         * @type {VarianceDetail[]}
         * @memberof VarianceRequestModel
         */
        this.details = undefined;
    }
    __decorate([
        (0, json2typescript_1.JsonProperty)("documentId", Number, true),
        __metadata("design:type", Number)
    ], VarianceRequestModel.prototype, "documentId", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("documentCode", String, true),
        __metadata("design:type", String)
    ], VarianceRequestModel.prototype, "documentCode", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("purchaseOrderNo", String, true),
        __metadata("design:type", String)
    ], VarianceRequestModel.prototype, "purchaseOrderNo", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("referenceNo", String, true),
        __metadata("design:type", String)
    ], VarianceRequestModel.prototype, "referenceNo", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("exchangeRate", Number, true),
        __metadata("design:type", Number)
    ], VarianceRequestModel.prototype, "exchangeRate", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("lines", [VarianceLine_1.VarianceLine], true),
        __metadata("design:type", Array)
    ], VarianceRequestModel.prototype, "lines", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("amount", VarianceUnit_1.VarianceUnit, true),
        __metadata("design:type", VarianceUnit_1.VarianceUnit)
    ], VarianceRequestModel.prototype, "amount", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("taxableAmount", VarianceUnit_1.VarianceUnit, true),
        __metadata("design:type", VarianceUnit_1.VarianceUnit)
    ], VarianceRequestModel.prototype, "taxableAmount", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("dutyPaid", VarianceUnit_1.VarianceUnit, true),
        __metadata("design:type", VarianceUnit_1.VarianceUnit)
    ], VarianceRequestModel.prototype, "dutyPaid", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("taxPaid", VarianceUnit_1.VarianceUnit, true),
        __metadata("design:type", VarianceUnit_1.VarianceUnit)
    ], VarianceRequestModel.prototype, "taxPaid", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("totalTaxPaid", VarianceUnit_1.VarianceUnit, true),
        __metadata("design:type", VarianceUnit_1.VarianceUnit)
    ], VarianceRequestModel.prototype, "totalTaxPaid", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("details", [VarianceDetail_1.VarianceDetail], true),
        __metadata("design:type", Array)
    ], VarianceRequestModel.prototype, "details", void 0);
    VarianceRequestModel = __decorate([
        (0, json2typescript_1.JsonObject)("VarianceRequestModel")
    ], VarianceRequestModel);
    return VarianceRequestModel;
}());
