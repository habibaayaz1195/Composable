"use strict";
/*
 * AvaTax Software Development Kit for JavaScript
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @copyright  2004-2018 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V2-JS-SDK
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateModel = void 0;
var ExemptionReasonModel_1 = require("./ExemptionReasonModel");
var CustomerModel_1 = require("./CustomerModel");
var PoNumberModel_1 = require("./PoNumberModel");
var ExposureZoneModel_1 = require("./ExposureZoneModel");
var CertificateAttributeModel_1 = require("./CertificateAttributeModel");
var json2typescript_1 = require("json2typescript");
var dateConverter_1 = require("../utils/dateConverter");
/**
 * A certificate is a document stored in either AvaTax Exemptions or CertCapture.  The certificate document
can contain information about a customer's eligibility for exemption from sales or use taxes based on
criteria you specify when you store the certificate.  To view or manage your certificates directly, please
log onto the administrative website for the product you purchased.
 * @export
 * @class CertificateModel
 */
var CertificateModel = exports.CertificateModel = /** @class */ (function () {
    function CertificateModel() {
        /**
         * @type {number}
         * @memberof CertificateModel
         */
        this.id = undefined;
        /**
         * @type {number}
         * @memberof CertificateModel
         */
        this.companyId = undefined;
        /**
         * @type {Date}
         * @memberof CertificateModel
         */
        this.signedDate = undefined;
        /**
         * @type {Date}
         * @memberof CertificateModel
         */
        this.expirationDate = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.filename = undefined;
        /**
         * @type {boolean}
         * @memberof CertificateModel
         */
        this.documentExists = undefined;
        /**
         * @type {boolean}
         * @memberof CertificateModel
         */
        this.valid = undefined;
        /**
         * @type {boolean}
         * @memberof CertificateModel
         */
        this.verified = undefined;
        /**
         * @type {number}
         * @memberof CertificateModel
         */
        this.exemptPercentage = undefined;
        /**
         * @type {boolean}
         * @memberof CertificateModel
         */
        this.isSingleCertificate = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.exemptionNumber = undefined;
        /**
         * @type {ExemptionReasonModel}
         * @memberof CertificateModel
         */
        this.validatedExemptionReason = undefined;
        /**
         * @type {ExemptionReasonModel}
         * @memberof CertificateModel
         */
        this.exemptionReason = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.status = undefined;
        /**
         * @type {Date}
         * @memberof CertificateModel
         */
        this.createdDate = undefined;
        /**
         * @type {Date}
         * @memberof CertificateModel
         */
        this.modifiedDate = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.taxNumberType = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.businessNumberType = undefined;
        /**
         * @type {number}
         * @memberof CertificateModel
         */
        this.pageCount = undefined;
        /**
         * @type {CustomerModel[]}
         * @memberof CertificateModel
         */
        this.customers = undefined;
        /**
         * @type {PoNumberModel[]}
         * @memberof CertificateModel
         */
        this.poNumbers = undefined;
        /**
         * @type {ExposureZoneModel}
         * @memberof CertificateModel
         */
        this.exposureZone = undefined;
        /**
         * @type {CertificateAttributeModel[]}
         * @memberof CertificateModel
         */
        this.attributes = undefined;
        /**
         * @type {number}
         * @memberof CertificateModel
         */
        this.ecmsId = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.ecmsStatus = undefined;
        /**
         * @type {string}
         * @memberof CertificateModel
         */
        this.pdf = undefined;
        /**
         * @type {string[]}
         * @memberof CertificateModel
         */
        this.pages = undefined;
    }
    __decorate([
        (0, json2typescript_1.JsonProperty)("id", Number, true),
        __metadata("design:type", Number)
    ], CertificateModel.prototype, "id", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("companyId", Number, true),
        __metadata("design:type", Number)
    ], CertificateModel.prototype, "companyId", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("signedDate", dateConverter_1.DateConverter),
        __metadata("design:type", Date)
    ], CertificateModel.prototype, "signedDate", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("expirationDate", dateConverter_1.DateConverter),
        __metadata("design:type", Date)
    ], CertificateModel.prototype, "expirationDate", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("filename", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "filename", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("documentExists", Boolean, true),
        __metadata("design:type", Boolean)
    ], CertificateModel.prototype, "documentExists", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("valid", Boolean, true),
        __metadata("design:type", Boolean)
    ], CertificateModel.prototype, "valid", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("verified", Boolean, true),
        __metadata("design:type", Boolean)
    ], CertificateModel.prototype, "verified", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("exemptPercentage", Number, true),
        __metadata("design:type", Number)
    ], CertificateModel.prototype, "exemptPercentage", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("isSingleCertificate", Boolean, true),
        __metadata("design:type", Boolean)
    ], CertificateModel.prototype, "isSingleCertificate", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("exemptionNumber", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "exemptionNumber", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("validatedExemptionReason", ExemptionReasonModel_1.ExemptionReasonModel, true),
        __metadata("design:type", ExemptionReasonModel_1.ExemptionReasonModel)
    ], CertificateModel.prototype, "validatedExemptionReason", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("exemptionReason", ExemptionReasonModel_1.ExemptionReasonModel),
        __metadata("design:type", ExemptionReasonModel_1.ExemptionReasonModel)
    ], CertificateModel.prototype, "exemptionReason", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("status", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "status", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("createdDate", dateConverter_1.DateConverter, true),
        __metadata("design:type", Date)
    ], CertificateModel.prototype, "createdDate", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("modifiedDate", dateConverter_1.DateConverter, true),
        __metadata("design:type", Date)
    ], CertificateModel.prototype, "modifiedDate", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("taxNumberType", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "taxNumberType", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("businessNumberType", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "businessNumberType", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("pageCount", Number, true),
        __metadata("design:type", Number)
    ], CertificateModel.prototype, "pageCount", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("customers", [CustomerModel_1.CustomerModel], true),
        __metadata("design:type", Array)
    ], CertificateModel.prototype, "customers", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("poNumbers", [PoNumberModel_1.PoNumberModel], true),
        __metadata("design:type", Array)
    ], CertificateModel.prototype, "poNumbers", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("exposureZone", ExposureZoneModel_1.ExposureZoneModel),
        __metadata("design:type", ExposureZoneModel_1.ExposureZoneModel)
    ], CertificateModel.prototype, "exposureZone", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("attributes", [CertificateAttributeModel_1.CertificateAttributeModel], true),
        __metadata("design:type", Array)
    ], CertificateModel.prototype, "attributes", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("ecmsId", Number, true),
        __metadata("design:type", Number)
    ], CertificateModel.prototype, "ecmsId", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("ecmsStatus", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "ecmsStatus", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("pdf", String, true),
        __metadata("design:type", String)
    ], CertificateModel.prototype, "pdf", void 0);
    __decorate([
        (0, json2typescript_1.JsonProperty)("pages", [String], true),
        __metadata("design:type", Array)
    ], CertificateModel.prototype, "pages", void 0);
    CertificateModel = __decorate([
        (0, json2typescript_1.JsonObject)("CertificateModel")
    ], CertificateModel);
    return CertificateModel;
}());
